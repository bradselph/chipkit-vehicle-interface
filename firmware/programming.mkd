---
layout: firmware
title: Programming the chipKIT
---

<div class="page-header">
    <h1>{{ page.title }}</h1>
</div>

[Download the latest stable
release](https://github.com/openxc/vi-firmware/releases) of the `vi-firmware`
source code from GitHub - the repository has a script we will use for flashing
the firmware.

<div class="panel-group" id="accordian">

   <div class="panel panel-default">
      <div class="panel-heading">
         <h4 class="panel-title">
            <a class="accordian-toggle" data-toggle="collapse"
                  data-parent="#accordian" href="#collapseWindows">
               Windows (click to expand)
            </a>
         </h4>
      </div>
      <div id="collapseWindows" class="panel-collapse collapse">
         <div class="panel-body">
            <ol>
               <li>Install <a href="http://www.cygwin.com">Cygwin</a> and in the installer, select the
                  following packages: <code>curl, libsasl2, ca-certificates, patchutils</code></li>
               <li>Start a Cygwin Terminal.</li>
               <li>Run this in the termial to configure it to ignore Windows-style line endings in scripts:
                 <code>echo "set -o igncr && export SHELLOPTS" >> ~/.bashrc && source ~/.bashrc</code></li>
            </ol>
         </div>
      </div>
   </div>

</div>

<h4>All Platforms</h4>

1. If your network uses an Internet proxy (e.g. a corporate network) set the
   ``http_proxy`` and ``https_proxy`` environment variables:

        $ export http_proxy=<your proxy>
        $ export https_proxy=<your proxy>

1. Plug your Vehicle Interface into your computer using a **mini-USB**
   connection (*not* the micro-USB connection you use to transfer vehicle data).

1. Run the ``upload_hex.sh`` script from the ``vi-firmware`` directory, passing
   it the file path to the .hex firmware file you obtained.

        $ cd vi-firmware
        vi-firmware/ $ script/upload_hex.sh <firmware file>.hex

The script attempts to install all required dependencies automatically. If you
run into problems, or are running an operating system not listed above, you may
need to install the dependencies manually. For instructions on how to install
the dependencies manually, as well as how to address some common errors, see the
[troubleshooting][troubleshooting] section for more information.

<div class="page-header">
<h2>Next Steps</h2>
</div>

Once you've flashed the firmware using the script, it's time to test your Vehicle Interface.
You can use the [OpenXC Python Library][python-test] to run a quick smoke test to verify the firmware flashed
successfully.

[python-test]: http://www.openxcplatform.com/python/getting-started.html
[troubleshooting]: /firmware/troubleshooting.html
